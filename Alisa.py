import discord
from discord.ext import commands, tasks
import asyncio
import os
from datetime import datetime
import re
import edge_tts
import json

TOKEN = ""
GUILD_ID = 1225075859333845154
VOICE_CHANNEL_ID = 1289694911234310155
ALLOWED_ROLE_IDS = [
    1289911579097436232,
    1225212269541986365,
    1226236176298541196,
    1282740488474067039,
    1287407480045043814
]
TTS_PERMISSION_ROLES = [
    1225212269541986365,
    1226236176298541196
]

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –∏–º–µ–Ω–∞–º–∏
CUSTOM_NAMES_FILE = "custom_names.json"

intents = discord.Intents.default()
intents.voice_states = True
intents.members = True
intents.guilds = True
intents.messages = True
intents.message_content = True

bot = commands.Bot(command_prefix="ya!", intents=intents)
vc = None
recent_joins = {}    # user_id: count of join announcements this hour
recent_leaves = {}   # user_id: count of leave announcements this hour
tts_queue = asyncio.Queue()
tts_player_task = None

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–º–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ (—Å–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç)
def load_custom_names():
    try:
        with open(CUSTOM_NAMES_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        with open(CUSTOM_NAMES_FILE, 'w', encoding='utf-8') as f:
            json.dump({}, f, ensure_ascii=False, indent=2)
        return {}
    except json.JSONDecodeError:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        with open(CUSTOM_NAMES_FILE, 'w', encoding='utf-8') as f:
            json.dump({}, f, ensure_ascii=False, indent=2)
        return {}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–º–µ–Ω –≤ —Ñ–∞–π–ª
def save_custom_names(custom_names):
    with open(CUSTOM_NAMES_FILE, 'w', encoding='utf-8') as f:
        json.dump(custom_names, f, ensure_ascii=False, indent=2)

custom_names = load_custom_names()

def clean_nickname(nick):
    """–û—á–∏—â–∞–µ—Ç –Ω–∏–∫–Ω–µ–π–º –æ—Ç –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –æ—Å—Ç–∞–≤–ª—è—è –ø—Ä–æ–±–µ–ª—ã"""
    # –ó–∞–º–µ–Ω—è–µ–º –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –Ω–∞ –ø—Ä–æ–±–µ–ª—ã, –∫—Ä–æ–º–µ –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ –ø—Ä–æ–±–µ–ª–æ–≤
    cleaned = re.sub(r"[^a-zA-Z–∞-—è–ê-–Ø—ë–Å0-9\s]", " ", nick)
    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    cleaned = re.sub(r"\s+", " ", cleaned).strip()
    return cleaned if cleaned else None

async def play_tts(text):
    """–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ TTS"""
    global vc
    if not vc or not vc.is_connected():
        print("–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É, –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.")
        return

    try:
        print(f"–û–∑–≤—É—á–∏–≤–∞–µ—Ç—Å—è: {text}")
        communicate = edge_tts.Communicate(text, voice="ru-RU-SvetlanaNeural")
        await communicate.save("tts.mp3")
        audio_source = discord.FFmpegPCMAudio("tts.mp3")
        vc.play(audio_source)
        while vc.is_playing():
            await asyncio.sleep(0.5)
        os.remove("tts.mp3")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {e}")

async def tts_player():
    """–§–æ–Ω–æ–≤—ã–π —Ç–∞—Å–∫ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è TTS"""
    while True:
        text = await tts_queue.get()
        await play_tts(text)
        tts_queue.task_done()

async def enqueue_tts(text):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –æ—á–µ—Ä–µ–¥—å TTS"""
    await tts_queue.put(text)

@bot.event
async def on_ready():
    global tts_player_task
    print(f"–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω.")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞
    await bot.change_presence(
        status=discord.Status.online,
        activity=discord.Activity(
            type=discord.ActivityType.listening,
            name="ya!alisa"
        )
    )

    check_voice_connection.start()
    reset_announcement_tracker.start()
    if not tts_player_task:
        tts_player_task = asyncio.create_task(tts_player())

@tasks.loop(seconds=10)
async def check_voice_connection():
    global vc
    guild = bot.get_guild(GUILD_ID)
    channel = guild.get_channel(VOICE_CHANNEL_ID)
    if not guild or not channel:
        return
    if not vc or not vc.is_connected() or vc.channel.id != VOICE_CHANNEL_ID:
        try:
            if vc:
                await vc.disconnect(force=True)
            vc = await channel.connect(reconnect=True)
            print("–ë–æ—Ç –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á—ë–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

@tasks.loop(minutes=1)
async def reset_announcement_tracker():
    now = datetime.now()
    if now.minute == 0:
        recent_joins.clear()
        recent_leaves.clear()
        print(f"[{now.strftime('%H:%M')}] –°–±—Ä–æ—Å –æ–∑–≤—É—á–µ–∫ –∑–∞ —á–∞—Å.")

@bot.command(name='name')
async def set_custom_name(ctx, *, name: str = None):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–µ –∏–º—è –¥–ª—è –æ–∑–≤—É—á–∫–∏"""
    if ctx.guild:
        await ctx.reply(embed=discord.Embed(
            title="‚úâÔ∏è –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–æ—Ç–∞.",
            color=0xe74c3c
        ))
        return
    if not name:
        await ctx.send(embed=discord.Embed(
            title="‚ö†Ô∏è –û—à–∏–±–∫–∞",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.",
            color=0xe74c3c
        ))
        return

    # –û—á–∏—â–∞–µ–º –∏–º—è
    cleaned_name = clean_nickname(name)
    if not cleaned_name:
        await ctx.send(embed=discord.Embed(
            title="‚ö†Ô∏è –û—à–∏–±–∫–∞",
            description="–ò–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã.",
            color=0xe74c3c
        ))
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    custom_names[str(ctx.author.id)] = cleaned_name
    save_custom_names(custom_names)

    await ctx.send(embed=discord.Embed(
        title="‚úÖ –£—Å–ø–µ—à–Ω–æ",
        description=f"–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –Ω–∞–∑—ã–≤–∞—Ç—å –≤–∞—Å **{cleaned_name}** –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.",
        color=0x2ecc71
    ))

@bot.command(name='say')
async def say_text(ctx, *, text: str = None):
    """–ü—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ"""
    if ctx.guild:
        await ctx.reply(embed=discord.Embed(
            title="‚úâÔ∏è –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–æ—Ç–∞.",
            color=0xe74c3c
        ))
        return
    if not text:
        await ctx.send(embed=discord.Embed(
            title="‚ö†Ô∏è –û—à–∏–±–∫–∞",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏.",
            color=0xe74c3c
        ))
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    guild = bot.get_guild(GUILD_ID)
    member = guild.get_member(ctx.author.id)
    if not member or not any(role.id in TTS_PERMISSION_ROLES for role in member.roles):
        await ctx.send(embed=discord.Embed(
            title="‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞",
            description="–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.",
            color=0xe74c3c
        ))
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞
    if len(text) > 200:
        await ctx.send(embed=discord.Embed(
            title="‚ö†Ô∏è –û—à–∏–±–∫–∞",
            description="–¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤).",
            color=0xe74c3c
        ))
        return

    await enqueue_tts(text)

    await ctx.send(embed=discord.Embed(
        title="üó£Ô∏è –¢–µ–∫—Å—Ç –≤ –æ—á–µ—Ä–µ–¥–∏",
        description=f"–¢–µ–∫—Å—Ç –±—É–¥–µ—Ç –æ–∑–≤—É—á–µ–Ω: \"{text}\"",
        color=0x3498db
    ))

@bot.command(name='alisa')
async def show_help(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    if ctx.guild:
        await ctx.reply(embed=discord.Embed(
            title="‚úâÔ∏è –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–æ—Ç–∞.",
            color=0xe74c3c
        ))
        return
    embed = discord.Embed(
        title="üìå –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
        description="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ:",
        color=0x9966CC
    )

    embed.add_field(
        name="ya!name [–∏–º—è]",
        value="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω–æ–µ –∏–º—è –¥–ª—è –æ–∑–≤—É—á–∫–∏ –ø—Ä–∏ –≤—Ö–æ–¥–µ/–≤—ã—Ö–æ–¥–µ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
        inline=False
    )

    embed.add_field(
        name="ya!say [—Ç–µ–∫—Å—Ç]",
        value="–û–∑–≤—É—á–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç (—Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω)",
        inline=False
    )

    embed.add_field(
        name="ya!alisa",
        value="–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ",
        inline=False
    )

    embed.set_footer(text="–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫", icon_url=bot.user.avatar.url if bot.user.avatar else None)

    await ctx.send(embed=embed)

@bot.event
async def on_voice_state_update(member, before, after):
    if member.bot:
        return
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –¥–ª—è –æ–∑–≤—É—á–∫–∏ (–∫–∞—Å—Ç–æ–º–Ω–æ–µ –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º)
    user_id = str(member.id)
    display_name = custom_names.get(user_id, clean_nickname(member.display_name))

    if not display_name:
        print(f"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–∑–≤—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.id}")
        return
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à—ë–ª –≤ –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª
    if after.channel and after.channel.id == VOICE_CHANNEL_ID and (not before.channel or before.channel.id != VOICE_CHANNEL_ID):
        if any(role.id in ALLOWED_ROLE_IDS for role in member.roles):
            now = datetime.now()
            count = recent_joins.get(member.id, 0)
            if count < 5:
                recent_joins[member.id] = count + 1
                await enqueue_tts(f"–ö –Ω–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è —É—á–∞—Å—Ç–Ω–∏–∫ {display_name}")
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª
    if before.channel and before.channel.id == VOICE_CHANNEL_ID and (not after.channel or after.channel.id != VOICE_CHANNEL_ID):
        if any(role.id in ALLOWED_ROLE_IDS for role in member.roles):
            now = datetime.now()
            count = recent_leaves.get(member.id, 0)
            if count < 5:
                recent_leaves[member.id] = count + 1
                await enqueue_tts(f"–£—á–∞—Å—Ç–Ω–∏–∫ {display_name} –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª")

bot.run(TOKEN)
